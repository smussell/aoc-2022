; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉user꞉> 
nil
clj꞉day1꞉> 
#'day1/should-run-mocks
clj꞉day1꞉> should-run-mocks
true
clj꞉day1꞉> 
#'day1/process-input
clj꞉day1꞉> 
; Syntax error macroexpanding clojure.core/ns at (src/day1.clj:2:1).
; def - failed: #{:refer-clojure} at: [:ns-clauses :refer-clojure :clause] spec: :clojure.core.specs.alpha/ns-refer-clojure
; def - failed: #{:require} at: [:ns-clauses :require :clause] spec: :clojure.core.specs.alpha/ns-require
; def - failed: #{:import} at: [:ns-clauses :import :clause] spec: :clojure.core.specs.alpha/ns-import
; def - failed: #{:use} at: [:ns-clauses :use :clause] spec: :clojure.core.specs.alpha/ns-use
; def - failed: #{:refer} at: [:ns-clauses :refer :clause] spec: :clojure.core.specs.alpha/ns-refer
; def - failed: #{:load} at: [:ns-clauses :load :clause] spec: :clojure.core.specs.alpha/ns-load
; def - failed: #{:gen-class} at: [:ns-clauses :gen-class :clause] spec: :clojure.core.specs.alpha/ns-gen-class
clj꞉day1꞉> 
nil
; WARNING: reverse already refers to: #'clojure.core/reverse in namespace: day1, being replaced by: #'clojure.string/reverse
; 
; WARNING: replace already refers to: #'clojure.core/replace in namespace: day1, being replaced by: #'clojure.string/replace
clj꞉day1꞉> (str 4)
"4"
clj꞉day1꞉> 
#'day1/part2
; WARNING: reverse already refers to: #'clojure.core/reverse in namespace: day1, being replaced by: #'clojure.string/reverse
; 
; WARNING: replace already refers to: #'clojure.core/replace in namespace: day1, being replaced by: #'clojure.string/replace
clj꞉day1꞉> (->> "1 2" (.split " "))
[" "]
clj꞉day1꞉> (->> "1 2" #(.split % " "))
#function[day1/eval7898/fn--7899]
clj꞉day1꞉> (->> "1 2" #(( .split % " ")))
#function[day1/eval7904/fn--7905]
clj꞉day1꞉> 
#function[day1/eval7910/fn--7911]
clj꞉day1꞉> (.split "1 2" " ")
["1", "2"]
clj꞉day1꞉> 
; Syntax error compiling at (src/day1.clj:12:21).
; Unable to resolve symbol: integers in this context
clj꞉day1꞉> 
#'day1/integers
clj꞉day1꞉> 
#'day1/process-input
clj꞉day1꞉> 
#'day1/part1
clj꞉day1꞉> 
(; Execution error (ClassCastException) at day1/process-input$fn (form-init7851124694366676233.clj:12).
; class java.lang.String cannot be cast to class java.lang.Character (java.lang.String and java.lang.Character are in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
#'day1/part1
clj꞉day1꞉> 
(; Execution error (ClassCastException) at day1/process-input$fn (form-init7851124694366676233.clj:12).
; class java.lang.String cannot be cast to class java.lang.Character (java.lang.String and java.lang.Character are in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
(def mm """
1000
2000
3000

4000

5000
6000

7000
8000
9000

10000
""")
; Syntax error compiling def at (.calva/output-window/output.calva-repl:77:1).
; Too many arguments to def
clj꞉day1꞉> 
(def ee "" "
1000
2000
3000

4000

5000
6000

7000
8000
9000

10000
"""))
; Syntax error compiling at (.calva/output-window/output.calva-repl:74:1).
; Unable to resolve symbol: clj꞉day1꞉>  in this context
clj꞉day1꞉> (print "he")
henil
clj꞉day1꞉> 
; Syntax error compiling def at (src/day1.clj:25:1).
; Too many arguments to def
clj꞉day1꞉> ee
; Syntax error compiling at (.calva/output-window/output.calva-repl:1:7703).
; Unable to resolve symbol: ee in this context
clj꞉day1꞉> 
#'day1/ee
clj꞉day1꞉> 
ee
"\n1000\n2000\n3000\n\n4000\n\n5000\n6000\n\n7000\n8000\n9000\n\n10000\n"
clj꞉day1꞉> 
(; Execution error (ClassCastException) at day1/process-input$fn (form-init7851124694366676233.clj:12).
; class java.lang.String cannot be cast to class java.lang.Character (java.lang.String and java.lang.Character are in module java.base of loader 'bootstrap')
clj꞉day1꞉> (process-input ee)
; Error printing return value (ClassCastException) at clojure.lang.RT/intCast (RT.java:1221).
; class java.lang.String cannot be cast to class java.lang.Character (java.lang.String and java.lang.Character are in module java.base of loader 'bootstrap')
clj꞉day1꞉> (-> ee trim (.split "\n\n")
"\n1000\n2000\n3000\n\n4000\n\n5000\n6000\n\n7000\n8000\n9000\n\n10000\n"
clj꞉day1꞉> 
)
; Syntax error compiling at (.calva/output-window/output.calva-repl:133:12).
; Unable to resolve symbol: clj꞉day1꞉>  in this context
clj꞉day1꞉> 
(-> input trim (.split "\n\n"))
; Syntax error compiling at (.calva/output-window/output.calva-repl:140:1).
; Unable to resolve symbol: input in this context
clj꞉day1꞉> 
(-> ee trim (.split "\n\n")
"\n1000\n2000\n3000\n\n4000\n\n5000\n6000\n\n7000\n8000\n9000\n\n10000\n"
clj꞉day1꞉> 
(-> ee trim (.split "\n\n"))
["1000\n2000\n3000", "4000", "5000\n6000", "7000\n8000\n9000", "10000"]
clj꞉day1꞉> 
(integers "1000\n2000\n3000")
; Error printing return value (ClassCastException) at clojure.lang.RT/intCast (RT.java:1221).
; class java.lang.String cannot be cast to class java.lang.Character (java.lang.String and java.lang.Character are in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
#'day1/integers
clj꞉day1꞉> (integers "1000\n2000\n3000")
; Error printing return value (ClassCastException) at clojure.lang.RT/intCast (RT.java:1221).
; class java.lang.String cannot be cast to class java.lang.Character (java.lang.String and java.lang.Character are in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
#'day1/integers
clj꞉day1꞉> (integers "1000\n2000\n3000")
; Execution error (ClassCastException) at day1/integers (form-init7851124694366676233.clj:9).
; class java.lang.String cannot be cast to class java.util.regex.Pattern (java.lang.String and java.util.regex.Pattern are in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
#'day1/integers
clj꞉day1꞉> (integers "1000\n2000\n3000")
; Execution error (ClassCastException) at day1/integers (form-init7851124694366676233.clj:9).
; class java.lang.String cannot be cast to class java.util.regex.Pattern (java.lang.String and java.util.regex.Pattern are in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
#'day1/integers
clj꞉day1꞉> (integers "1000\n2000\n3000")
; Execution error (ClassCastException) at day1/integers (form-init7851124694366676233.clj:9).
; class java.lang.String cannot be cast to class java.util.regex.Pattern (java.lang.String and java.util.regex.Pattern are in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
#'day1/int-seq
clj꞉day1꞉> (int-seq "1000\n2000\n3000")
; Execution error (ClassCastException) at day1/int-seq (form-init7851124694366676233.clj:9).
; class java.lang.String cannot be cast to class java.util.regex.Pattern (java.lang.String and java.util.regex.Pattern are in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
#'day1/int-seq
clj꞉day1꞉> 
#'day1/int-seq
clj꞉day1꞉> (integers "1000\n2000\n3000")
; Execution error (ClassCastException) at day1/integers (form-init7851124694366676233.clj:9).
; class java.lang.String cannot be cast to class java.util.regex.Pattern (java.lang.String and java.util.regex.Pattern are in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
(int-seq "1000\n2000\n3000")
; Execution error (ClassCastException) at day1/int-seq (form-init7851124694366676233.clj:9).
; class java.lang.String cannot be cast to class java.util.regex.Pattern (java.lang.String and java.util.regex.Pattern are in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
#'day1/int-seq
clj꞉day1꞉> 
(int-seq "1000\n2000\n3000")
; Execution error (ClassCastException) at day1/int-seq (form-init7851124694366676233.clj:9).
; class java.lang.String cannot be cast to class java.util.regex.Pattern (java.lang.String and java.util.regex.Pattern are in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
#'day1/int-seq
clj꞉day1꞉> 
(int-seq "1000\n2000\n3000")
; Execution error (ClassCastException) at day1/int-seq (form-init7851124694366676233.clj:9).
; class java.lang.String cannot be cast to class java.util.regex.Pattern (java.lang.String and java.util.regex.Pattern are in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
int-seq
#function[day1/int-seq]
clj꞉day1꞉> 
#'day1/int-seq
clj꞉day1꞉> 
#'day1/int-seq
clj꞉day1꞉> 
(int-seq "1000\n2000\n3000")
"1000\n2000\n3000"
clj꞉day1꞉> 
#'day1/int-seq
clj꞉day1꞉> 
(int-seq "1000\n2000\n3000")
; Execution error (ClassCastException) at day1/int-seq (form-init7851124694366676233.clj:9).
; class java.lang.String cannot be cast to class java.util.regex.Pattern (java.lang.String and java.util.regex.Pattern are in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
#'day1/int-seq
clj꞉day1꞉> 
#'day1/integers
clj꞉day1꞉> 
(integers "1000\n2000\n3000")
; Error printing return value (ClassCastException) at clojure.lang.RT/intCast (RT.java:1221).
; class java.lang.String cannot be cast to class java.lang.Character (java.lang.String and java.lang.Character are in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
#'day1/integers
clj꞉day1꞉> (integers "1000\n2000\n3000")
; Error printing return value (ClassCastException) at clojure.core/map$fn (core.clj:2770).
; class java.lang.String cannot be cast to class clojure.lang.IFn (java.lang.String is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉day1꞉> 
#'day1/integers
clj꞉day1꞉> (integers "1000\n2000\n3000")
["1000" "2000" "3000"]
clj꞉day1꞉> 
#'day1/parse-int
clj꞉day1꞉> 
#'day1/integers
clj꞉day1꞉> 
(integers "1000\n2000\n3000")
(1000 2000 3000)
clj꞉day1꞉> 
#'day1/process-input
clj꞉day1꞉> 
(process-input ee)
(6000 4000 11000 24000 10000)
clj꞉day1꞉> 
#'day1/part1
clj꞉day1꞉> 
(6000 4000 11000 24000 10000)
FAILED: Expected 66306 got 
nil
clj꞉day1꞉> 
#'day1/part1
clj꞉day1꞉> 
#'day1/part1
clj꞉day1꞉> 
FAILED: Expected 66306 got 24000
nil
clj꞉day1꞉> 
#'util/debug
clj꞉util꞉> 
; Syntax error compiling at (src/day1.clj:22:8).
; Unable to resolve symbol: debug in this context
clj꞉day1꞉> 
#'util/debug
clj꞉util꞉> 
nil
; WARNING: reverse already refers to: #'clojure.core/reverse in namespace: day1, being replaced by: #'clojure.string/reverse
; 
; WARNING: replace already refers to: #'clojure.core/replace in namespace: day1, being replaced by: #'clojure.string/replace
clj꞉day1꞉> 
#'day1/part1
clj꞉day1꞉> 
(6000 4000 11000 24000 10000)
FAILED: Expected 66306 got 24000
nil
clj꞉day1꞉> 
(6000 4000 11000 24000 10000)
FAILED: Expected 24000 got 24000
nil
clj꞉day1꞉> 
(6000 4000 11000 24000 10000)
FAILED: Expected 24000 got 24000
nil
clj꞉day1꞉> 
(6000 4000 11000 24000 10000)
FAILED: Expected 24000 got 24000
nil
clj꞉day1꞉> (= (str 2400) "2400")
true
clj꞉day1꞉> 
#'util/run-with-mocks
clj꞉util꞉> 
nil
; WARNING: reverse already refers to: #'clojure.core/reverse in namespace: day1, being replaced by: #'clojure.string/reverse
; 
; WARNING: replace already refers to: #'clojure.core/replace in namespace: day1, being replaced by: #'clojure.string/replace
clj꞉day1꞉> 
(6000 4000 11000 24000 10000)
SUCCESS
nil
clj꞉day1꞉> 
#'day1/part1
clj꞉day1꞉> 
SUCCESS
nil
clj꞉day1꞉> 
#'day1/part2
clj꞉day1꞉> 
FAILED: Expected 45000 got 20000
nil
clj꞉day1꞉> 
#'day1/part2
clj꞉day1꞉> 
; Execution error (ClassCastException) at day1/part2$fn (form-init7851124694366676233.clj:27).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉day1꞉> (->> )
#'day1/part2
clj꞉day1꞉> 
; Execution error (ClassCastException) at day1/part2$fn (form-init7851124694366676233.clj:27).
; class clojure.lang.ArraySeq cannot be cast to class java.lang.CharSequence (clojure.lang.ArraySeq is in unnamed module of loader 'app'; java.lang.CharSequence is in module java.base of loader 'bootstrap')
clj꞉day1꞉> (reverse [1 2 3])
; Execution error (ClassCastException) at day1/eval8085 (form-init7851124694366676233.clj:322).
; class clojure.lang.PersistentVector cannot be cast to class java.lang.CharSequence (clojure.lang.PersistentVector is in unnamed module of loader 'app'; java.lang.CharSequence is in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
(reverse '(1 2 3))
; Execution error (ClassCastException) at day1/eval8087 (form-init7851124694366676233.clj:326).
; class clojure.lang.PersistentList cannot be cast to class java.lang.CharSequence (clojure.lang.PersistentList is in unnamed module of loader 'app'; java.lang.CharSequence is in module java.base of loader 'bootstrap')
clj꞉day1꞉> 
; Syntax error macroexpanding clojure.core/ns at (src/day1.clj:2:1).
; :as - failed: simple-symbol? at: [:ns-clauses :require :body :libspec :lib] spec: :clojure.core.specs.alpha/libspec
; :as - failed: (or (nil? %) (sequential? %)) at: [:ns-clauses :require :body :libspec :lib+opts] spec: :clojure.core.specs.alpha/libspec
; :as - failed: (or (nil? %) (sequential? %)) at: [:ns-clauses :require :body :prefix-list] spec: :clojure.core.specs.alpha/prefix-list
; :as - failed: #{:verbose :reload :reload-all} at: [:ns-clauses :require :body :flag] spec: :clojure.core.specs.alpha/ns-require
; :require - failed: #{:refer-clojure} at: [:ns-clauses :refer-clojure :clause] spec: :clojure.core.specs.alpha/ns-refer-clojure
; :require - failed: #{:import} at: [:ns-clauses :import :clause] spec: :clojure.core.specs.alpha/ns-import
; :require - failed: #{:use} at: [:ns-clauses :use :clause] spec: :clojure.core.specs.alpha/ns-use
; :require - failed: #{:refer} at: [:ns-clauses :refer :clause] spec: :clojure.core.specs.alpha/ns-refer
; :require -
;  failed: #{:load} at: [:ns-clauses :load :clause] spec: :clojure.core.specs.alpha/ns-load
; :require - failed: #{:gen-class} at: [:ns-clauses :gen-class :clause] spec: :clojure.core.specs.alpha/ns-gen-class
clj꞉day1꞉> 
; Syntax error macroexpanding clojure.core/ns at (src/day1.clj:2:1).
; :as - failed: simple-symbol? at: [:ns-clauses :require :body :libspec :lib] spec: :clojure.core.specs.alpha/libspec
; :as - failed: (or (nil? %) (sequential? %)) at: [:ns-clauses :require :body :libspec :lib+opts] spec: :clojure.core.specs.alpha/libspec
; :as - failed: (or (nil? %) (sequential? %)) at: [:ns-clauses :require :body :prefix-list] spec: :clojure.core.specs.alpha/prefix-list
; :as - failed: #{:verbose :reload :reload-all} at: [:ns-clauses :require :body :flag] spec: :clojure.core.specs.alpha/ns-require
; :require - failed: #{:refer-clojure} at: [:ns-clauses :refer-clojure :clause] spec: :clojure.core.specs.alpha/ns-refer-clojure
; :require - failed: #{:import} at: [:ns-clauses :import :clause] spec: :clojure.core.specs.alpha/ns-import
; :require - failed: #{:use} at: [:ns-clauses :use :clause] spec: :clojure.core.specs.alpha/ns-use
; :require - failed: #{:refer} at: [:ns-clauses :refer :clause] spec: :clojure.core.specs.alpha/ns-refer
; :require -
;  failed: #{:load} at: [:ns-clauses :load :clause] spec: :clojure.core.specs.alpha/ns-load
; :require - failed: #{:gen-class} at: [:ns-clauses :gen-class :clause] spec: :clojure.core.specs.alpha/ns-gen-class
clj꞉day1꞉> 
nil
clj꞉day1꞉> (reset)

; Syntax error compiling at (.calva/output-window/output.calva-repl:357:12).
; Unable to resolve symbol: reset in this context
clj꞉day1꞉> 
nil
clj꞉day1꞉> 
#'day1/parse-int
clj꞉day1꞉> 
#'day1/should-run-mocks
clj꞉day1꞉> 
#'day1/integers
clj꞉day1꞉> 
#'day1/process-input
clj꞉day1꞉> 
#'day1/part1
clj꞉day1꞉> 
#'day1/part2
clj꞉day1꞉> 
SUCCESS
nil
clj꞉day1꞉> 
SUCCESS
nil
clj꞉day1꞉> 
; nREPL Connection was closed
